# -*- coding: utf-8 -*-

"""
    uberapilib.models.location
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .base_model import BaseModel

class Location(BaseModel):

    """Implementation of the 'Location' model.

    Location with address

    Attributes:
        address (string): The address in user readable form
        latitude (float): Latitude component of location.
        longitude (float): Longitude component of location.

    """

    def __init__(self, 
                 address = None,
                 latitude = None,
                 longitude = None):
        """Constructor for the Location class"""
        
        # Initialize members of the class
        self.address = address
        self.latitude = latitude
        self.longitude = longitude

        # Create a mapping from Model property names to API property names
        self.names = {
            "address" : "address",
            "latitude" : "latitude",
            "longitude" : "longitude",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            address = dictionary.get("address")
            latitude = dictionary.get("latitude")
            longitude = dictionary.get("longitude")
            # Return an object of this model
            return cls(address,
                       latitude,
                       longitude)
