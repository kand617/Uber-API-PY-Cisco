# -*- coding: utf-8 -*-

"""
    uberapilib.models.time_estimate_collection
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .time_estimate import TimeEstimate
from .base_model import BaseModel

class TimeEstimateCollection(BaseModel):

    """Implementation of the 'Time Estimate Collection' model.

    Collection of time estimates

    Attributes:
        times (list of TimeEstimate): List of time estimates

    """

    def __init__(self, 
                 times = None):
        """Constructor for the TimeEstimateCollection class"""
        
        # Initialize members of the class
        self.times = times

        # Create a mapping from Model property names to API property names
        self.names = {
            "times" : "times",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            times = None
            if dictionary.get("times") != None:
                times = list()
                for structure in dictionary.get("times"):
                    times.append(TimeEstimate.from_dictionary(structure))
            # Return an object of this model
            return cls(times)
