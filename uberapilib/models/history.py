# -*- coding: utf-8 -*-

"""
    uberapilib.models.history
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .location import Location
from .base_model import BaseModel

class History(BaseModel):

    """Implementation of the 'History' model.

    A history of pickup and dropoff

    Attributes:
        distance (float): Distance travelled
        end_location (Location): Location where journey ended
        end_time (int): Time of journey end
        product_id (string): The product that was used
        request_time (int): Time when requested
        start_location (Location): Location of starting the journey
        start_time (int): Time of starting the journey
        status (string): Status of the product e.g., completed
        uuid (string): History item id

    """

    def __init__(self, 
                 distance = None,
                 end_location = None,
                 end_time = None,
                 product_id = None,
                 request_time = None,
                 start_location = None,
                 start_time = None,
                 status = None,
                 uuid = None):
        """Constructor for the History class"""
        
        # Initialize members of the class
        self.distance = distance
        self.end_location = end_location
        self.end_time = end_time
        self.product_id = product_id
        self.request_time = request_time
        self.start_location = start_location
        self.start_time = start_time
        self.status = status
        self.uuid = uuid

        # Create a mapping from Model property names to API property names
        self.names = {
            "distance" : "distance",
            "end_location" : "end_location",
            "end_time" : "end_time",
            "product_id" : "product_id",
            "request_time" : "request_time",
            "start_location" : "start_location",
            "start_time" : "start_time",
            "status" : "status",
            "uuid" : "uuid",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            distance = dictionary.get("distance")
            end_location = Location.from_dictionary(dictionary.get("end_location")) if dictionary.get("end_location") else None
            end_time = dictionary.get("end_time")
            product_id = dictionary.get("product_id")
            request_time = dictionary.get("request_time")
            start_location = Location.from_dictionary(dictionary.get("start_location")) if dictionary.get("start_location") else None
            start_time = dictionary.get("start_time")
            status = dictionary.get("status")
            uuid = dictionary.get("uuid")
            # Return an object of this model
            return cls(distance,
                       end_location,
                       end_time,
                       product_id,
                       request_time,
                       start_location,
                       start_time,
                       status,
                       uuid)
