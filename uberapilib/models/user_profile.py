# -*- coding: utf-8 -*-

"""
    uberapilib.models.user_profile
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .base_model import BaseModel

class UserProfile(BaseModel):

    """Implementation of the 'User Profile' model.

    User profile information

    Attributes:
        email (string): Email address of the Uber user
        first_name (string): First name of the Uber user.
        last_name (string): Last name of the Uber user.
        picture (string): Image URL of the Uber user.
        promo_code (string): Promo code of the Uber user.

    """

    def __init__(self, 
                 email = None,
                 first_name = None,
                 last_name = None,
                 picture = None,
                 promo_code = None):
        """Constructor for the UserProfile class"""
        
        # Initialize members of the class
        self.email = email
        self.first_name = first_name
        self.last_name = last_name
        self.picture = picture
        self.promo_code = promo_code

        # Create a mapping from Model property names to API property names
        self.names = {
            "email" : "email",
            "first_name" : "first_name",
            "last_name" : "last_name",
            "picture" : "picture",
            "promo_code" : "promo_code",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            email = dictionary.get("email")
            first_name = dictionary.get("first_name")
            last_name = dictionary.get("last_name")
            picture = dictionary.get("picture")
            promo_code = dictionary.get("promo_code")
            # Return an object of this model
            return cls(email,
                       first_name,
                       last_name,
                       picture,
                       promo_code)
