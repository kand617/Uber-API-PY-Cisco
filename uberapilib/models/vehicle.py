# -*- coding: utf-8 -*-

"""
    uberapilib.models.vehicle
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .base_model import BaseModel

class Vehicle(BaseModel):

    """Implementation of the 'vehicle' model.

    The object that contains vehicle details.

    Attributes:
        license_plate (string): TODO: type description here.
        make (string): TODO: type description here.
        model (string): TODO: type description here.

    """

    def __init__(self, 
                 license_plate = None,
                 make = None,
                 model = None):
        """Constructor for the Vehicle class"""
        
        # Initialize members of the class
        self.license_plate = license_plate
        self.make = make
        self.model = model

        # Create a mapping from Model property names to API property names
        self.names = {
            "license_plate" : "license_plate",
            "make" : "make",
            "model" : "model",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            license_plate = dictionary.get("license_plate")
            make = dictionary.get("make")
            model = dictionary.get("model")
            # Return an object of this model
            return cls(license_plate,
                       make,
                       model)
