# -*- coding: utf-8 -*-

"""
    uberapilib.models.driver
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
"""
from .base_model import BaseModel

class Driver(BaseModel):

    """Implementation of the 'driver' model.

    The object that contains driver details.

    Attributes:
        name (string): The first name of the driver.
        phone_number (string): The formatted phone number for contacting the
            driver.
        picture_url (string): The URL to the photo of the driver.
        rating (float): The driver's star rating out of 5 stars.

    """

    def __init__(self, 
                 name = None,
                 phone_number = None,
                 picture_url = None,
                 rating = None):
        """Constructor for the Driver class"""
        
        # Initialize members of the class
        self.name = name
        self.phone_number = phone_number
        self.picture_url = picture_url
        self.rating = rating

        # Create a mapping from Model property names to API property names
        self.names = {
            "name" : "name",
            "phone_number" : "phone_number",
            "picture_url" : "picture_url",
            "rating" : "rating",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            name = dictionary.get("name")
            phone_number = dictionary.get("phone_number")
            picture_url = dictionary.get("picture_url")
            rating = dictionary.get("rating")
            # Return an object of this model
            return cls(name,
                       phone_number,
                       picture_url,
                       rating)
